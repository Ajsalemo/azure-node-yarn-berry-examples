# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master
  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        if [ -d ".yarn/cache/" ]; then
          echo ".yarn/cache checked in for 'Zero Installs', pushing cache and not running install.."  
        elif [ ! -d ".yarn/cache/" ]; then
          echo ".yarn/cache not found, configuring yarn.."
          echo "Setting yarn version to stable.."
          yarn set version stable
          echo "Checking yarn version.."
          yarn -v
          echo "Running yarn install.."
          yarn install 
        fi
      displayName: 'Check for .yarn cache or install packages'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(AZURE_WEBAPP_NAME)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: $(AZURE_WEBAPP_NAME)'
            inputs:
              azureSubscription: $(AZURE_RESOURCE_MANAGER_ID)
              appType: webAppLinux
              appName: $(AZURE_WEBAPP_NAME)
              runtimeStack: 'NODE|16-lts'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              # startUpCommand: 'yarn start' - this is optional if using require("./.pnp.cjs").setup(); in server.js