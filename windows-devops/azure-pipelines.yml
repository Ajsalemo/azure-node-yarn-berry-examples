# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main
  
pool:
  # Runs with iisnode were tested with 'windows-latest'
  vmImage: 'windows-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

      # NOTE: Do not set environment variables like YARN_xxx or else you may encounter errors
      # ex: Usage Error: Unrecognized or legacy configuration settings found: <someName> - run "yarn config -v" to see the list of settings supported in Yarn
    - script: |
        IF EXIST ".yarn/cache/" (
          echo ".yarn/cache checked in for 'Zero Installs', pushing cache and not running install.."
        ) ELSE IF NOT EXIST ".yarn/cache/" (
          echo ".yarn/cache doesn't exist, running yarn set version and install.."
          echo "Setting yarn version to latest (3.x).."
          yarn set version stable
          echo "Checking yarn version.."
          yarn -v
          echo "Running yarn install.."
          yarn install
        )
      displayName: 'Check for .yarn cache'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      
    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifact: drop
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(webAppNameVar)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(AZURE_SUBSCRIPTION_NAME)($(AZURE_SUBSCRIPTION_ID))'
              appType: 'webApp'
              appName: $(webAppNameVar)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto'